package Frame;

import java.awt.Color;
import java.awt.Font;
import java.awt.SystemColor;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import javax.swing.SwingConstants;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

import Oracle.Oracle_DAO;
import client.client;
import javazoom.jl.player.Player;

import javax.swing.JTextArea;
import javax.swing.ListSelectionModel;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JTable;
import java.awt.event.ActionListener;
import java.io.BufferedInputStream;
import java.io.DataOutputStream;
import java.io.FileInputStream;
import java.io.IOException;
import java.net.Socket;
import java.net.SocketException;
import java.awt.event.ActionEvent;
import javax.swing.JTextField;

public class Frame_ReservationNotice extends JFrame {
	private JTable menutable;
	public static DefaultTableModel tablemodel;
	public DefaultTableCellRenderer tablesort;
	private String attribute[] = {"메뉴","수량","단가"};
	private Object tuple[][] = {};
	private JTextField txt_tablenum;
	private JTextField txt_phone;
	private JTextField txt_orderpay;
	
	public Frame_ReservationNotice(String text) {
		getContentPane().setBackground(Color.WHITE);
		((JComponent)getContentPane()).setBorder(new LineBorder(new Color(53,135,145)));
		//테이블번호@@전화번호@@짜장면!수량!단가#탕수육!수량!단가@@총주문액@@메세지
		String orderinfo[] = text.split("@@");
		String ordermenu[] = orderinfo[2].split("#");

		String menuname[] = new String[ordermenu.length];
		String menucnt[] = new String[ordermenu.length];
		String menuprice[] = new String[ordermenu.length];
		
		for(int i = 0; i < ordermenu.length; i++) {
			String menuinfo[] = ordermenu[i].split("!");
			menuname[i] = menuinfo[0];
			menucnt[i] = menuinfo[1];
			menuprice[i] = menuinfo[2];
		}
		
		setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		setSize(500, 800);
		setResizable(false);
		setUndecorated(true);
		setLocationRelativeTo(null);
		setBackground(SystemColor.window);
		getContentPane().setLayout(null);
		
		JLabel label_poscLogo = new JLabel("Posc 예약");
		label_poscLogo.setFont(new Font("한컴 윤고딕 230", Font.PLAIN, 30));
		label_poscLogo.setHorizontalAlignment(SwingConstants.CENTER);
		label_poscLogo.setBounds(54, 22, 397, 64);
		getContentPane().add(label_poscLogo);
		
		JLabel label_tablenum = new JLabel("테이블번호 : ");
		label_tablenum.setFont(new Font("한컴 윤고딕 230", Font.PLAIN, 15));
		label_tablenum.setBounds(54, 118, 90, 18);
		getContentPane().add(label_tablenum);
		
		txt_tablenum = new JTextField(orderinfo[0]);
		txt_tablenum.setBorder(new LineBorder(new Color(53,135,145)));
		txt_tablenum.setFont(new Font("한컴 윤고딕 230", Font.PLAIN, 15));
		txt_tablenum.setBackground(Color.WHITE);
		txt_tablenum.setBounds(151, 115, 300, 24);
		getContentPane().add(txt_tablenum);
		txt_tablenum.setColumns(10);
		txt_tablenum.setEditable(false);
		
		JLabel label_phone = new JLabel("전화번호 : ");
		label_phone.setFont(new Font("한컴 윤고딕 230", Font.PLAIN, 15));
		label_phone.setBounds(54, 161, 77, 18);
		getContentPane().add(label_phone);
			
		txt_phone = new JTextField(orderinfo[1]);
		txt_phone.setBorder(new LineBorder(new Color(53,135,145)));
		txt_phone.setFont(new Font("한컴 윤고딕 230", Font.PLAIN, 15));
		txt_phone.setBackground(Color.WHITE);
		txt_phone.setColumns(10);
		txt_phone.setBounds(134, 158, 317, 24);
		getContentPane().add(txt_phone);
		txt_phone.setEditable(false);
		
		JLabel label_orderinfo = new JLabel("주문");
		label_orderinfo.setFont(new Font("한컴 윤고딕 230", Font.PLAIN, 15));
		label_orderinfo.setBounds(54, 207, 62, 18);
		getContentPane().add(label_orderinfo);
		
		JLabel label_orderpay = new JLabel("주문금액 : ");
		label_orderpay.setFont(new Font("한컴 윤고딕 230", Font.PLAIN, 15));
		label_orderpay.setBounds(54, 440, 77, 18);
		getContentPane().add(label_orderpay);
		
		txt_orderpay = new JTextField(orderinfo[3] + "원");
		txt_orderpay.setBorder(new LineBorder(new Color(53,135,145)));
		txt_orderpay.setFont(new Font("한컴 윤고딕 230", Font.PLAIN, 15));
		txt_orderpay.setBackground(Color.WHITE);
		txt_orderpay.setHorizontalAlignment(SwingConstants.RIGHT);
		txt_orderpay.setColumns(10);
		txt_orderpay.setBounds(134, 437, 317, 24);
		getContentPane().add(txt_orderpay);
		txt_orderpay.setEditable(false);
		
		JLabel label_msg = new JLabel("메시지");
		label_msg.setFont(new Font("한컴 윤고딕 230", Font.PLAIN, 15));
		label_msg.setBounds(54, 484, 77, 18);
		getContentPane().add(label_msg);
		
		JTextArea txta_msg = new JTextArea(orderinfo[4]);
		txta_msg.setBorder(new LineBorder(new Color(53,135,145)));
		txta_msg.setFont(new Font("한컴 윤고딕 230", Font.PLAIN, 14));
		txta_msg.setBounds(54, 514, 397, 124);
		getContentPane().add(txta_msg);
		txta_msg.setEditable(false);
		
		JButton btn_accept = new JButton("수락");
		btn_accept.setForeground(Color.WHITE);
		btn_accept.setBackground(new Color(53,135,145));
		btn_accept.setFont(new Font("한컴 윤고딕 230", Font.PLAIN, 18));
		btn_accept.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
	            Thread sender = new RSender(client.socket, client.s_name, txt_phone.getText() + "@@r1");  
	            sender.start(); //스레드 시동
	            dispose();
	            Oracle_DAO oracle = new Oracle_DAO();
	            for(int i = 0; i < menuname.length; i++) {
	            	oracle.OracleOrderInsert(Integer.parseInt(txt_tablenum.getText()), 0, menuname[i], Integer.parseInt(menuprice[i]), Integer.parseInt(menucnt[i]), Integer.parseInt(menuprice[i])*Integer.parseInt(menucnt[i]));	            	
	            }
			}
		});
		btn_accept.setBounds(54, 692, 105, 35);
		getContentPane().add(btn_accept);
		
		JButton btn_reject = new JButton("거부");
		btn_reject.setForeground(Color.WHITE);
		btn_reject.setBackground(new Color(53,135,145));
		btn_reject.setFont(new Font("한컴 윤고딕 230", Font.PLAIN, 18));
		btn_reject.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
	            Thread sender = new RSender(client.socket, client.s_name, txt_phone.getText() + "@@r0");  
	            sender.start(); //스레드 시동
	            dispose();
			}
		});
		btn_reject.setBounds(346, 692, 105, 35);
		getContentPane().add(btn_reject);
		
		
		setTable();
		for(int i = 0; i < ordermenu.length; i++) {
			tablemodel.addRow(new Object[]{menuname[i], menucnt[i], menuprice[i]});
		}
		
		setVisible(true);
	}

	private void setTable() {
		tablemodel = new DefaultTableModel(tuple, attribute) {
			public boolean isCellEditable(int tuple, int attribute) {
				return false;
			}
		};

		menutable = new JTable(tablemodel);
		menutable.setBorder(new LineBorder(null, 0, true));
		menutable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		menutable.setRowHeight(30);
		menutable.getTableHeader().setBackground(new Color(53,135,145));
		menutable.getTableHeader().setReorderingAllowed(false);
		menutable.getTableHeader().setResizingAllowed(false);
		menutable.getTableHeader().setForeground(Color.WHITE);
		menutable.getTableHeader().setFont(new Font("맑은 고딕", Font.BOLD, 13));
		menutable.setFocusable(false);
		menutable.setRowSelectionAllowed(true);
		menutable.setFont(new Font("한컴 윤고딕 230", Font.PLAIN, 13));
		menutable.setSelectionBackground(new Color(255,255,180));
		
		menutable.getColumnModel().getColumn(0).setPreferredWidth(180);
		menutable.getColumnModel().getColumn(1).setPreferredWidth(10);
		menutable.getColumnModel().getColumn(2).setPreferredWidth(100);
		
		tablesort = new DefaultTableCellRenderer();
		tablesort.setHorizontalAlignment(tablesort.CENTER);
		
		menutable.getColumnModel().getColumn(0).setCellRenderer(tablesort);
		menutable.getColumnModel().getColumn(1).setCellRenderer(tablesort);
		menutable.getColumnModel().getColumn(2).setCellRenderer(tablesort);

		JScrollPane sc = new JScrollPane(menutable);
		sc.setBounds(54, 237, 397, 188);
		sc.getViewport().setBackground(Color.WHITE);
		sc.setBorder(new LineBorder(new Color(0, 0, 0)));
		
		getContentPane().add(sc);	
	}
}

//서버로 메시지를 전송하는 클래스
class RSender extends Thread {
  Socket socket;
  String msg;
  DataOutputStream out;
  String name;
 
  //생성자 ( 매개변수로 소켓과 사용자 이름 받습니다. )
  public RSender(Socket socket, String name, String msg){ //소켓과 사용자 이름을 받는다.
      this.socket = socket;      
      this.msg = msg;
      try{
          out = new DataOutputStream(this.socket.getOutputStream());
          this.name = name; //받아온 사용자이름을 전역변수에 저장, 다른 메서드인 run()에서 사용하기위함.
      }catch(Exception e){
          System.out.println("예외:"+e);
      }
  }
 
  @Override
  public void run(){ //run()메소드 재정의
     
     // Scanner s = new Scanner(System.in);
      //키보드로부터 입력을 받기위한 스캐너 객체 생성
     
//      서버에 입력한 사용자이름을 보내준다.
//      try {
//          out.writeUTF(name);
//      } catch (IOException e) {          
//          System.out.println("예외:"+e);
//      }      
          try { //while문 안에 try-catch문을 사용한 이유는 while문 내부에서 예외가 발생하더라도
                //계속 반복할수있게 하기위해서이다.                  
             
              //명령어 기능 추가. ( /접속자 , /귓속말 상대방아이디 전달할메시지 )               
              if(msg.trim().startsWith("/")){
                 
                  //클라이언트단에서 체크
                  if(msg.equals("/접속자")||msg.startsWith("/귓속말")){                    
                      out.writeUTF(msg);
                  }else{
                      System.out.println("잘못된 명령어입니다.");
                      //out.writeUTF("잘못된 명령어입니다.");
                  }                      
                 
                  //out.writeUTF(msg); //명령어 서버로 보냄.
                 
              }else{//명령어가 아니면 키보드로부터 입력받은 문자열을 서버로 보낸다.
                  out.writeUTF(msg);               
              }              
             
          }catch(SocketException e){             
               System.out.println("예외:"+e);
               System.out.println("접속중인 서버와 연결이 끊어졌습니다.");
              return;              
         } catch (IOException e) {
              System.out.println("예외:"+e);
         }
   
  }//run()------
}//class Sender-------

/////////////////////////////////////////////////////////////////////
